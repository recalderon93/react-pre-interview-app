{"version":3,"sources":["Component/Elements/Loader/logo.svg","Component/Elements/Loader/loader.js","Store/UI/ui.actions.js","Utils/Constants.js","Component/Module/navMenu.js","Component/Module/Layout/header.js","Component/Module/Layout/Layout.js","Component/Module/Layout/index.js","Component/Elements/Button/buttonStyled.js","Component/Elements/Button/index.js","Component/Prototypes/CountriesList/CountriesList.js","Store/User/user.actions.js","Component/Elements/Input/InputFieldStyled.js","Component/Module/Layout/InputSummit/inputSubmit.js","Component/Prototypes/LandingPage/landingPage.js","Component/Prototypes/LandingPage/index.js","Store/API/api.actions.js","Utils/ContinentsSelectionhandler.js","Store/Countries/countries.actions.js","Component/Prototypes/SelectContinents/selectContinent.item.js","Component/Prototypes/SelectContinents/selectContinent.container.js","Component/Prototypes/SelectContinents/SelectContinent.js","Utils/randomIndex.js","Store/Trivia/trivia.actions.js","Component/Prototypes/TriviaPage/trivia.table.js","Component/Prototypes/TriviaPage/TriviaPage.js","Routes/index.js","App.js","reportWebVitals.js","Store/Middlewares/api.middleware.js","Store/Middlewares/trivia.middleware.js","Store/Countries/countries.reducer.js","Utils/index.js","Store/UI/ui.reducer.js","Store/User/user.reducer.js","Store/API/api.reducer.js","Store/Trivia/trivia.reducers.js","Store/rootReducer.js","Store/store.js","Context/themeContext.js","Context/context.js","index.js"],"names":["Loader","open","Backdrop","src","logo","className","alt","UI_ACTIONS","setLoader","loading","type","payload","CONSTANTS","CONTINENTS","API_END_POINTS","ALL","URL","GET_URL","continent","toLowerCase","ROUTES","LOGIN","SELECT_CONTINENTS","COUNTRIES_LIST","TRIVIA","NavMenu","history","useHistory","useState","openMenu","setState","handleClose","IconButton","edge","color","aria-label","onClick","e","currentTarget","Menu","id","anchorEl","keepMounted","Boolean","onClose","MenuItem","push","useStyles","makeStyles","theme","flexContainer","display","justifyContent","ToggleNigthMode","darkMode","useSelector","state","ui","dispatch","useDispatch","FormControlLabel","control","Switch","checked","onChange","labelPlacement","Header","classes","Box","p","AppBar","position","m","Toolbar","Typography","fontWeight","fontSize","noWrap","component","Layout","children","loader","buttonContainer","width","heigh","alignContent","button","ButtonStyled","textValue","handler","Button","variant","columns","field","headerName","renderCell","value","CountriesList","rowsC","countries","countriesList","map","item","index","nombre","translations","es","flag2","flag","name","style","height","rows","pageSize","checkboxSelection","components","GridToolbar","USER_ACTIONS","InputFieldStyled","label","TextField","useStyle","margin","padding","flexDirection","alignItems","gap","withTheme","title","onChangeHandler","onClickHandler","Paper","elevation","backgroundColor","palette","primary","due","LandingPage","user","userNameChange","target","userNameSubmit","API_ACTIONS","apiSuccess","response","entity","toUpperCase","data","meta","apiError","error","continentSelectionHandler","continentsList","continentsTraslated","requestList","length","res","list","requestListCreator","urls","method","body","apiRequest","COUNTRIES_ACTIONS","root","continents","selected","includes","onChangeCheckHandler","toggleAllContinents","main","align","text","Checkbox","SelectContinentContainer","useEffect","gridTemplateColumns","concat","heigth","SelectContinent","disable","message","disabled","testid","randomIndex","arrayLength","controlArray","Math","floor","random","TRIVIA_ACTIONS","generatesTrivia","selectedCountry","TriviaResultsTable","trivia","noCorrectAns","noAttemps","noRevealedAns","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","container","aligItems","justtifyContent","flexWrap","innerContainer","flexGrow","TriviaPage","clasess","answerHandler","alert","reveal","correctAnswer","userAnswer","RoutesComponent","exact","path","App","CssBaseline","Routes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","apiMiddleware","next","action","a","match","Promise","all","url","fetch","resF","json","dataF","allData","triviaMiddleware","getState","test","RegExp","continentsReducer","produce","draft","array","indexOf","newArray","splice","sort","toggleSelectionArray","uiReducer","userReducer","ENTITY","countriesApiReducer","triviaReducer","rootReducer","combineReducers","store","configureStore","reducer","middleware","preloadedState","serialisedState","localStorage","getItem","JSON","parse","console","warn","loadFromLocalStorage","subscribe","clear","stringify","setItem","saveToLocalStorage","createMuiTheme","orange","background","default","grey","darkTheme","ThemeContext","ThemeProvider","Context","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAAe,MAA0B,iC,gBCa1BA,MARf,YAA2B,IAATC,EAAQ,EAARA,KAChB,OACE,cAACC,EAAA,EAAD,CAAUD,KAAMA,EAAhB,SACE,qBAAKE,IAAKC,EAAMC,UAAU,WAAWC,IAAI,Y,sECPlCC,EACC,kBADDA,EAEO,wBAEPC,EAAY,SAACC,GAAD,MAAc,CAErCC,KAAMH,EACNI,QAAS,CACPF,a,oECSWG,EAlBG,CAChBC,WAAY,CAAC,SAAU,UAAW,OAAQ,SAAU,WACpDC,eAAgB,CACdC,IAAK,CACHC,IAAK,wCAEPC,QAAS,SAACC,GAAD,MAAgB,CACvBF,IAAI,2CAAD,OAA6CE,EAAUC,kBAG9DC,OAAQ,CACNC,MAAO,IACPC,kBAAmB,oBACnBC,eAAgB,iBAChBC,OAAQ,YC2CGC,EAnDC,WACd,IAAMC,EAAUC,cADI,EAESC,mBAAS,MAFlB,mBAEbC,EAFa,KAEHC,EAFG,KAGZV,EAAWR,EAAXQ,OACFW,EAAc,WAClBD,EAAS,OAEX,OACE,qCACE,cAACE,EAAA,EAAD,CAAYC,KAAK,QAAQC,MAAM,UAAUC,aAAW,OAAOC,QAAS,SAACC,GAAD,OAAOP,EAASO,EAAEC,gBAAtF,SACE,cAAC,IAAD,MAEF,eAACC,EAAA,EAAD,CACEC,GAAG,cACHC,SAAUZ,EACVa,aAAW,EACXzC,KAAM0C,QAAQd,GACde,QAASb,EALX,UAOE,cAACc,EAAA,EAAD,CAAUT,QAAS,WACjBV,EAAQoB,KAAK1B,EAAOC,OACpBU,KAFF,4BAOA,cAACc,EAAA,EAAD,CAAUT,QAAS,WACjBV,EAAQoB,KAAK1B,EAAOE,mBACpBS,KAFF,qCAOA,cAACc,EAAA,EAAD,CAAUT,QAAS,WACjBV,EAAQoB,KAAK1B,EAAOG,gBACpBQ,KAFF,6BAOA,cAACc,EAAA,EAAD,CAAUT,QAAS,WACjBV,EAAQoB,KAAK1B,EAAOI,QACpBO,KAFF,2BCnCFgB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,cAAe,CACbC,QAAS,OACTC,eAAgB,qBA2BpB,SAASC,IAAmB,IAClBC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAA1CH,SACFI,EAAWC,cACjB,OACE,mCACE,cAACC,EAAA,EAAD,CACEC,QACE,qCACE,cAAC,IAAD,IACA,cAACC,EAAA,EAAD,CAAQC,QAAST,EAAUU,SAAU,SAAC3B,GAAD,OAAOqB,EHrCnB,CACnChD,KAAMH,UGuCA0D,eAAe,YAMRC,MA1CA,WACb,IAAMC,EAAUpB,IAChB,OACE,mCACE,cAACqB,EAAA,EAAD,CAAKC,EAAE,IAAP,SACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,EAAG,EAAGH,EAAG,EAAnC,SACE,eAACI,EAAA,EAAD,CAASD,EAAG,EAAGH,EAAG,EAAGhE,UAAW8D,EAAQjB,cAAxC,UACE,cAAC,EAAD,IACA,cAACwB,EAAA,EAAD,CACEC,WAAY,IACZC,SAAU,GACVC,QAAM,EACNC,UAAU,MAJZ,8BAQA,cAACzB,EAAD,cCjBG0B,ICdAA,EDIf,YAA+B,IAAbC,EAAY,EAAZA,SACRC,EAAW1B,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAxCwB,OACR,OACE,qCACE,cAAC,EAAD,IACCA,EAAS,cAAC,EAAD,CAAQhF,MAAI,IAAM+E,M,0BEP5BjC,EAAYC,YAAW,CAC3BkC,gBAAiB,CACfC,MAAO,OACPC,MAAO,OACPjC,QAAS,OACTC,eAAgB,SAChBiC,aAAc,UAEhBC,OAAQ,CACNH,MAAO,SAiBII,IC5BAA,EDef,YAAsD,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,QAC3BtB,GAD6C,EAATgB,MAC1BpC,KAChB,OACE,mCACE,cAACqB,EAAA,EAAD,CAAK/D,UAAW8D,EAAQe,gBAAxB,SACE,cAACQ,EAAA,EAAD,CAAQtD,QAAS,SAACC,GAAD,OAAOoD,EAAQpD,IAAIhC,UAAW8D,EAAQmB,OAAQK,QAAQ,YAAvE,SACE,cAACjB,EAAA,EAAD,CAAYC,WAAW,MAAvB,SAA8Ba,WEhBlCI,EAAU,CACd,CAAEC,MAAO,KAAMC,WAAY,KAAMX,MAAO,IACxC,CACEU,MAAO,OACPC,WAAY,UACZX,MAAO,IACPY,WAAY,gBAAGC,EAAH,EAAGA,MAAH,OAAgB,qBAAK7F,IAAK6F,EAAOb,MAAM,OAAO7E,IAAI,WAEhE,CAAEuF,MAAO,SAAUC,WAAY,OAAQX,MAAO,KAC9C,CAAEU,MAAO,UAAWC,WAAY,UAAWX,MAAO,KAClD,CAAEU,MAAO,SAAUC,WAAY,cAAeX,MAAO,MA4BxCc,MAzBf,WAA0B,IAElBC,EADoB3C,aAAY,SAACC,GAAD,OAAWA,EAAM2C,aAA/CC,cACoBC,KAAI,SAACC,EAAMC,GAAP,oBAC9B/D,GAAI+D,EACJC,OAAQF,EAAKG,aAAaC,GAC1BC,MAAO,qBAAKxG,IAAKmG,EAAKM,KAAMtG,IAAG,UAAKgG,EAAKO,KAAV,YAC5BP,MAEC5E,EAAUC,cAChB,OACE,mCACE,sBAAKmF,MAAO,CAAEC,OAAQ,OAAQ5B,MAAO,QAArC,UACE,cAAC,IAAD,CACE6B,KAAMd,EACNN,QAASA,EACTqB,SAAU,GACVC,mBAAiB,EACjBC,WAAY,CAAE1C,QAAS2C,OAEzB,cAAC,EAAD,CAAc5B,UAAU,iBAAiBC,QAAS,kBAAM/D,EAAQoB,KAAKlC,EAAUQ,OAAOI,iBCvCjF6F,EACH,qBADGA,EAEH,qB,2BCgBKC,MAff,YAAsD,IAA1B7B,EAAyB,EAAzBA,QAASO,EAAgB,EAAhBA,MAAOuB,EAAS,EAATA,MAC1C,OACE,mCAEE,cAACC,EAAA,EAAD,CACE7B,QAAQ,SACR4B,MAAOA,EACP/E,GAAG,4BACHwB,SAAU,SAAC3B,GAAD,OAAOoD,EAAQpD,IACzB2D,MAAOA,OCNTyB,EAAWzE,YAAW,CAC1BE,cAAe,CACbwE,OAAQ,aACRC,QAAS,QACTxC,MAAO,4BACP4B,OAAQ,4BACR5D,QAAS,OACTyE,cAAe,SACfxE,eAAgB,SAChByE,WAAY,SACZC,IAAK,SAyBMC,mBAtBf,YAEI,IADFC,EACC,EADDA,MAAcC,GACb,EADMjC,MACN,EADaiC,iBAAiBC,EAC9B,EAD8BA,eAAgBjF,EAC9C,EAD8CA,MAEzCkB,EAAUsD,IAChB,OACE,mCACE,eAACU,EAAA,EAAD,CACExC,QAAQ,YACRyC,UAAW,EACX/H,UAAW8D,EAAQjB,cACnB4D,MAAO,CACLuB,gBAAiBpF,EAAMqF,QAAQC,QAAQC,KAL3C,UAQGR,GAAS,cAACtD,EAAA,EAAD,CAAYiB,QAAQ,KAAKhB,WAAW,MAApC,SAA4CqD,IACtD,cAAC,EAAD,CAAkBvC,QAASwC,EAAiBV,MAAM,sBAClD,cAAC,EAAD,CAAc/B,UAAU,UAAUC,QAASyC,YCXpCO,ICtBAA,EDKf,WACE,IAAM/E,EAAWC,cACTkD,EAAStD,aAAY,SAACC,GAAD,OAAWA,EAAMkF,QAAtC7B,KACFnF,EAAUC,cAOhB,OACE,mCACE,cAAC,EAAD,CAAaqG,MAAM,WAAWhC,MAAOa,EAAMoB,gBALvB,SAAC5F,GACvBqB,EHV0B,SAACmD,GAAD,MAAW,CACvCnG,KAAM2G,EACN1G,QAAS,CACPkG,SGOS8B,CAAetG,EAAEuG,OAAO5C,SAI8CkC,eAR5D,SAAC7F,GACpBqB,EHA0B,SAAChC,GAAD,MAAc,CAC1ChB,KAAM2G,EACN1G,QAAS,CACPe,YGHSmH,CAAenH,UETfoH,GACF,cADEA,GAEF,cAFEA,GAGJ,YAYIC,GAAa,SAACC,EAAUC,GAAX,MAAuB,CAC/CvI,KAAK,IAAD,OAAMuI,EAAOC,cAAb,aAlBqB,eAmBzBvI,QAAS,CACPwI,KAAMH,EACNI,KAAM,CAAEH,aAGCI,GAAW,SAACC,EAAOL,GAAR,MAAoB,CAC1CvI,KAAK,IAAD,OAAMuI,EAAOC,cAAb,aAxBmB,aAyBvBvI,QAAS,CACPyI,KAAM,CAAEH,UACRE,KAAMG,KC1BK,SAASC,GAA0B7F,EAAU8F,EAAgB9H,GAC1E,IACI+H,EADAC,EAAc,GAEdF,EAAeG,SAAW/I,EAAUC,WACtC6I,EAAc,CAAC,OAEfD,EAAsBD,EAAenD,KAAI,SAACC,GACxC,IAAIsD,EACJ,OAAQtD,EAAKnF,eACX,IAAK,SACHyI,EAAM,SACN,MACF,IAAK,UACHA,EAAM,WACN,MACF,IAAK,OACHA,EAAM,OACN,MACF,IAAK,SACHA,EAAM,SACN,MACF,IAAK,UACHA,EAAM,UAKV,OAAOA,MAGXF,EAMF,SAA4BG,GAC1B,IAAIH,EAAc,GAEhBA,EADEG,EAAKF,SAAW/I,EAAUC,WAAW8I,OACzB,CAAC/I,EAAUE,eAAeC,IAAIC,KAE9B6I,EAAKxD,KAAI,SAACC,GAAD,OAAU1F,EAAUE,eAAeG,QAAQqF,GAAMtF,OAE1E,OAAO0I,EAbOI,CAAmBL,IACjBE,OAAS,GACvBjG,ED1BsB,SAACqG,EAAMC,EAAQC,EAAMhB,EAAQvH,GAA7B,MAA0C,CAClEhB,KAAK,IAAD,OAAMuI,EAAOC,cAAb,aAVqB,eAWzBvI,QAAS,CACPyI,KAAM,CACJW,OAAMC,SAAQf,SAAQvH,WAExByH,KAAMc,ICoBGC,CAAWR,EAAa,MAAO,GAAI,YAAahI,I,cCnChDyI,GACiB,yCADjBA,GAEY,oCC2DVpC,oBApDf,YAAgD,IAAjB9E,EAAgB,EAAhBA,MAAO+C,EAAS,EAATA,MAC9BjD,EAAYC,YAAW,CAC3BoH,KAAM,CACJjH,QAAS,OACTC,eAAgB,UAElBkD,KAAM,CACJnB,MAAO,+BAGHqE,EAAmBjG,aAAY,SAACC,GAAD,OAAWA,EAAM6G,cAAhDb,eACFc,EAAY1J,EAAUC,WAAW0J,SAASvE,GAC5CwD,EAAee,SAASvE,GAAUwD,EAAeG,SAAW/I,EAAUC,WAAW8I,OAC/EjG,EAAWC,cACX6G,EAAuB,SAACnI,GACxBzB,EAAUC,WAAW0J,SAASvE,GAChCtC,EDpBwC,CAC5ChD,KAAMyJ,GACNxJ,QAAS,CACPO,UCiB0B8E,KACS,UAAxBA,EAAM7E,eACfuC,EDf6B,SAAC8F,GAAD,MAAqB,CACtD9I,KAAMyJ,GACNxJ,QAAS,CACP6I,mBCYWiB,CAAoBjB,KAGjC,OACE,mCACE,cAAC5F,EAAA,EAAD,CACEvD,UAAW0C,IAAYqH,KACvBvG,QACE,eAACsE,EAAA,EAAD,CACE9H,UAAW0C,IAAYuD,KACvBX,QAAQ,YACRyC,UAAW,EACXtB,MAAO,CACLuB,gBAAiBpF,EAAMqF,QAAQC,QAAQmC,KACvCvH,QAAS,OACTyE,cAAe,UAPnB,UAUE,cAAClD,EAAA,EAAD,CACEiG,MAAM,SACN9F,QAAM,EACNC,UAAU,MACVgC,MAAO,CAAE5E,MAAOe,EAAMqF,QAAQsC,KAAKrC,SAJrC,SAMGvC,IAEH,cAAC6E,GAAA,EAAD,CAAU9G,QAASuG,EAAUtG,SAAU,SAAC3B,GAAD,OAAOmI,iBC3B3CM,OApBf,WACE,IAAMT,EAAazJ,EAAUC,WAE7B,OADAkK,qBAAU,kBAAM,eAAW,IAEzB,mCACE,qBAAKjE,MAAO,CACV3D,QAAS,OACT6H,oBAAqB,cACrBtD,OAAQ,SACRI,IAAK,SAJP,SAOGuC,EAAWY,OAAO,CAAC,UAAU5E,KAAI,SAACC,GAAD,OAChC,cAAC,GAAD,CAAgCN,MAAOM,GAAbA,WCT9BvD,GAAYC,YAAW,CAC3BkC,gBAAiB,CACfC,MAAO,OACP+F,OAAQ,QACR/H,QAAS,OACTC,eAAgB,SAChBiC,aAAc,UAGhBnC,cAAe,CACbiC,MAAO,QACPuC,OAAQ,kBACRvE,QAAS,OACTyE,cAAe,SACfC,WAAY,SACZC,IAAK,SAqCMqD,OAjCf,WACE,IAAMhH,EAAUpB,KACVrB,EAAUC,cACRkF,EAAStD,aAAY,SAACC,GAAD,OAAWA,EAAMkF,QAAtC7B,KACFnD,EAAWC,cACT6F,EAAmBjG,aAAY,SAACC,GAAD,OAAWA,EAAM6G,cAAhDb,eACF4B,EAAoC,IAA1B5B,EAAeG,OAEzB0B,EAAO,eADIxE,GAAiB,KAATA,EAAcA,EAAO,UACjC,8DACb,OACE,mCACE,eAACzC,EAAA,EAAD,CAAK/D,UAAW8D,EAAQjB,cAAxB,UACE,cAACwB,EAAA,EAAD,CAAYiB,QAAQ,KAAKgF,MAAM,SAA/B,SAAyCU,IACzC,cAAC,GAAD,IACA,cAACjH,EAAA,EAAD,CAAK/D,UAAW8D,EAAQe,gBAAxB,SACE,cAACQ,EAAA,EAAD,CACEtD,QAAS,SAACC,GACRkH,GAA0B7F,EAAU8F,EAAgB9H,IAEtD4J,SAAUF,EACVzF,QAAQ,YACRzD,MAAM,UACNqJ,OAAO,kBAPT,SASE,cAAC7G,EAAA,EAAD,oCCrDG,SAAS8G,GAAYC,EAAaC,GAC/C,IAAM9B,EAAM+B,KAAKC,MAAMD,KAAKE,SAAYJ,GACxC,OAAIC,EAAanB,SAASX,GACjB4B,GAAYC,EAAaC,GAE3B9B,ECHF,IAAMkC,GACO,qCADPA,GAEI,yBAFJA,GAGI,0BAHJA,GAIF,0BAJEA,GAKA,4BALAA,GAMI,2BAGV,SAASC,GAAgBL,EAActF,GAC5C,IAAMG,EAAQiF,GAAYpF,EAAcuD,OAAQ+B,GAC1CM,EAAkB5F,EAAcG,GACtC,MAAQ,CACN7F,KAAMoL,GACNnL,QAAS,CACP4F,QACAyF,oB,gECYSC,GAxBY,WAAO,IAAD,EACoB1I,aAAY,SAACC,GAAD,OAAWA,EAAM0I,UAAxEC,EADuB,EACvBA,aAAcC,EADS,EACTA,UAAWC,EADF,EACEA,cACjC,OACE,mCACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,wBACA,cAACA,GAAA,EAAD,uBACA,cAACA,GAAA,EAAD,6BAGJ,eAACC,GAAA,EAAD,WACE,cAACD,GAAA,EAAD,UAAYP,IACZ,cAACO,GAAA,EAAD,UAAYN,IACZ,cAACM,GAAA,EAAD,UAAYL,eCTlBtJ,GAAYC,YAAW,CAC3B4J,UAAW,CACTlF,OAAQ,YACRvE,QAAS,OACT0J,UAAW,SACXC,gBAAiB,SACjBC,SAAU,QAEZC,eAAgB,CACdC,SAAU,EACV9J,QAAS,OACTyE,cAAe,SACfC,WAAY,SACZC,IAAK,SA8CMoF,OA1Cf,WACE,IAAMC,EAAUpK,KACVW,EAAWC,cAFG,EAGUJ,aAAY,SAACC,GAAD,OAAWA,KAA7C0I,EAHY,EAGZA,OAAQ/F,EAHI,EAGJA,UACVzE,EAAUC,cAYhB,SAASsG,EAAgB5F,GFxBpB,IAAwB2D,EEyB3BtC,GFzB2BsC,EEyBH3D,EAAEuG,OAAO5C,MFxB3B,CACNtF,KAAMoL,GACNnL,QAAS,CAAEqF,YEwBb,SAASoH,IACP1J,EFrBM,CACNhD,KAAMoL,GACNnL,QAAS,KEqBX,OAjBAoK,qBAAU,WAQR,OAPI5E,EAAUC,cAAcuD,OAAS,GACnCjI,EAAQoB,KAAKlC,EAAUQ,OAAOE,mBAE9B+L,MAAM,2BAEN3J,EAASqI,GAAgBG,EAAOR,aAAcvF,EAAUC,gBAEnD,eAEN,CAACD,EAAUC,cAAe1C,EAAUhC,EAASwK,EAAOR,eAQrD,mCACE,sBAAKrL,UAAW8M,EAAQP,UAAxB,UAEE,sBAAKvM,UAAW8M,EAAQH,eAAxB,UACGd,EAAOoB,QAAU,cAAC5I,EAAA,EAAD,CAAYiB,QAAQ,KAApB,SAA0BuG,EAAOqB,gBACnD,qBAAKpN,IAAK+L,EAAOF,gBAAgBpF,KAAMtG,IAAI,aAAa6E,MAAM,QAC9D,cAAC,EAAD,CAAkBa,MAAOkG,EAAOsB,WAAYjG,MAAM,uBAAuB9B,QAAS,SAACpD,GAAD,OAAO4F,EAAgB5F,MACzG,cAAC,EAAD,CAAcmD,UAAU,YAAYC,QAAS,SAACpD,GAAQ+K,OACtD,cAAC,EAAD,CAAc5H,UAAU,UAAUC,QAAS,SAACpD,GAAQqB,EFhBpD,CACNhD,KAAMoL,GACNnL,QAAS,WEiBL,8BACE,cAAC,GAAD,YCzCK8M,OAff,WAA4B,IAClBrM,EAAWR,EAAXQ,OACR,OACE,cAAC,IAAD,UAEE,eAAC,EAAD,WACE,cAAC,IAAD,CAAOsM,OAAK,EAACC,KAAMvM,EAAOC,MAAOyD,UAAW2D,IAC5C,cAAC,IAAD,CAAOiF,OAAK,EAACC,KAAMvM,EAAOG,eAAgBuD,UAAWmB,IACrD,cAAC,IAAD,CAAOyH,OAAK,EAACC,KAAMvM,EAAOE,kBAAmBwD,UAAWqG,KACxD,cAAC,IAAD,CAAOuC,OAAK,EAACC,KAAMvM,EAAOI,OAAQsD,UAAWoI,WCLtCU,OATf,WACE,OACE,sBAAKvN,UAAU,MAAf,UACE,cAACwN,EAAA,EAAD,IACA,cAACC,GAAD,QCMSC,GAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gDCkBCQ,GAxBO,SAAC,GAAD,IAAG9K,EAAH,EAAGA,SAAH,OAAkB,SAAC+K,GAAD,gDAAU,WAAOC,GAAP,gCAAAC,EAAA,yDAChDF,EAAKC,IAEDA,EAAOhO,KAAKkO,MAAM,eAH0B,0BAM1CF,EAAO/N,QAAQyI,KADjBH,EAL4C,EAK5CA,OAAQe,EALoC,EAKpCA,OAAQD,EAL4B,EAK5BA,KAAMrI,EALsB,EAKtBA,QALsB,SAS5CgC,EAASlD,GAAU,IATyB,SAUzBqO,QAAQC,IAAI/E,EAAK1D,KAAI,SAAC0I,GAAD,OAASC,MAAMD,EAAK,CAAE/E,eAVlB,cAUtCiF,EAVsC,iBAWxBJ,QAAQC,IAAIG,EAAK5I,KAAI,SAACuD,GAAD,OAASA,EAAIsF,WAXV,QAWtCC,EAXsC,OAY5CC,GAAU,MAAGnE,OAAH,qBAAakE,IACvBzL,EAASqF,GAAWqG,EAASnG,IAC7BvH,EAAQoB,KAAK,kBAd+B,kDAgB5CY,EAAS2F,GAAS,EAAD,GAAQJ,IAhBmB,SAmB5CyF,EAAOhO,KAAKkO,MAAM,cAAgBF,EAAOhO,KAAKkO,MAAM,iBACtDlL,EAASlD,GAAU,IApB2B,0DAAV,wDCqBzB6O,GApBU,SAAC,GAAD,IAAG3L,EAAH,EAAGA,SAAU4L,EAAb,EAAaA,SAAb,OAA4B,SAACb,GAAD,gDAAU,WAAOC,GAAP,sBAAAC,EAAA,yDAC7DF,EAAKC,GADwD,EAE/BY,IAAtBpD,EAFqD,EAErDA,OAAQ/F,EAF6C,EAE7CA,UACRzF,EAASgO,EAAThO,MACJ,UAAU6O,KAAK7O,GAJ0C,sBAKnDA,EALmD,cAMpDoL,GANoD,wBAOnD0D,OAAOtD,EAAOqB,cAAe,KAAKgC,KAAKrD,EAAOsB,aAChD9J,EPyBA,CACNhD,KAAMoL,GACNnL,QAAS,KO1BH+C,EAASqI,GAAgBG,EAAOR,aAAcvF,EAAUC,iBAExD1C,EPsCA,CACNhD,KAAMoL,GACNnL,QAAS,KOnDkD,oGAAV,wD,kBCC9C,IAuBQ8O,GAnBWC,cAAQ,SAACC,EAAOjB,GAAY,IAC5ChO,EAAkBgO,EAAlBhO,KAAMC,EAAY+N,EAAZ/N,QACd,OAAQD,GACN,KAAKyJ,GACHwF,EAAMnG,eCbG,SAA8BoG,EAAO5J,GAClD,IAAMO,EAAQqJ,EAAMC,QAAQ7J,GACtB8J,EAAWF,EAOjB,OANIrJ,EAAQ,EACVuJ,EAAShN,KAAKkD,GAEd8J,EAASC,OAAOxJ,EAAO,GAEzBuJ,EAASE,OACFF,EDIoBG,CAAqBN,EAAMnG,eAAgB7I,EAAQO,WAC1E,MACF,KAAKiJ,GAEDxJ,EAAQ6I,iBAAmB5I,EAAUC,WAErC8O,EAAMnG,eAAiB,GAEvBmG,EAAMnG,eAAiB5I,EAAUC,cAhBF,CACrC2I,eAAgB,KEaH0G,GAdGR,cAAQ,SAACC,EAAOjB,GAAY,IACpChO,EAAkBgO,EAAlBhO,KAAMC,EAAY+N,EAAZ/N,QACd,OAAQD,GACN,KAAKH,EACHoP,EAAM1K,OAAStE,EAAQF,QACvB,MACF,KAAKF,EACHoP,EAAMrM,UAAYqM,EAAMrM,YATK,CAAE2B,QAAQ,EAAO3B,UAAU,ICoB/C6M,GAfKT,cAAQ,SAACC,EAAOjB,GAAY,IACtChO,EAAkBgO,EAAlBhO,KAAMC,EAAY+N,EAAZ/N,QACd,OAAQD,GACN,KAAK2G,EACHsI,EAAM9I,KAAOlG,EAAQkG,KACrB,MACF,KAAKQ,EACH1G,EAAQe,QAAQoB,KAAKlC,EAAUQ,OAAOE,sBAVjB,CACzBuF,KAAM,KCHFuJ,GAAS,cAwBAC,GAlBaX,cAAQ,SAACC,EAAOjB,GAAY,IAC9ChO,EAAkBgO,EAAlBhO,KAAMC,EAAY+N,EAAZ/N,QACd,OAAQD,GACN,IAAI,GAAJ,OAAQ0P,GAAR,YAAkBtH,IAChB6G,EAAMvJ,cAAgB,GACtB,MACF,IAAI,GAAJ,OAAQgK,GAAR,YAAkBtH,IAChB6G,EAAMvJ,cAAgBuJ,EAAMvJ,cAAc6E,OAAOtK,EAAQwI,MACzD,MACF,IAAI,GAAJ,OAAQiH,GAAR,YAAkBtH,IAEhBuE,MAAM,wDAfyB,CACnCjH,cAAe,KCyCFkK,GAhCOZ,cAAQ,SAACC,EAAOjB,GAAY,IACxChO,EAAkBgO,EAAlBhO,KAAMC,EAAY+N,EAAZ/N,QACd,OAAQD,GACN,KAAKoL,GAEH6D,EAAMrC,QAAS,EACfqC,EAAMnC,WAAa,GACnBmC,EAAMjE,aAAa5I,KAAKnC,EAAQ4F,OAChCoJ,EAAM3D,gBAAkBrL,EAAQqL,gBAChC2D,EAAMpC,cAAgB5M,EAAQqL,gBAAgBvF,aAAaC,GAC3D,MACF,KAAKoF,IACkB,IAAjB6D,EAAMrC,SACRqC,EAAMrC,QAAUqC,EAAMrC,OACtBqC,EAAMtD,iBAER,MACF,KAAKP,GACH6D,EAAMnC,WAAa7M,EAAQqF,MAC3B,MACF,KAAK8F,GACH6D,EAAMxD,eACNwD,EAAMvD,YACN,MACF,KAAKN,GACH6D,EAAMvD,eApCiB,CAC3BV,aAAc,GACd8B,WAAY,GACZxB,gBAAiB,GACjBuB,cAAe,GACfpB,aAAc,EACdC,UAAW,EACXC,cAAe,EACfiB,QAAQ,ICKKiD,GAVKC,aAClB,CACE/M,GAAIyM,GACJxH,KAAMyH,GACN9F,WAAYoF,GACZtJ,UAAWkK,GACXnE,OAAQoE,KCYZ,IAAMG,GAAQC,aAAe,CAC3BC,QAASJ,GACTK,WAAY,CAACpC,GAAea,IAC5BwB,eAbF,WACE,IACE,IAAMC,EAAkBC,aAAaC,QAAQ,mBAC7C,GAAwB,OAApBF,EAA0B,OAC9B,OAAOG,KAAKC,MAAMJ,GAClB,MAAOzO,GAEP,YADA8O,QAAQC,KAAK/O,IAOCgP,KAIlBZ,GAAMa,WAAU,kBA1BT,SAA4B9N,GACjCuN,aAAaQ,QACb,IACE,IAAMT,EAAkBG,KAAKO,UAAUhO,GACvCuN,aAAaU,QAAQ,kBAAmBX,GACxC,MAAOzO,GACP8O,QAAQC,KAAK/O,IAoBKqP,CAAmBjB,GAAMnB,eAChCmB,U,gDC1BTxN,GAAQ0O,aAAe,CAC3BrJ,QAAS,CACPC,QAAS,CACPmC,KAAMkH,KAAO,MAGfC,WAAY,CACVC,QAASC,KAAK,MAEhBnH,KAAM,CACJrC,QAAS,cAKTyJ,GAAYL,aAAe,CAC/BrJ,QAAS,CACPC,QAAS,CACPmC,KAAMqH,KAAK,KACXvJ,IAAKuJ,KAAK,MAGZF,WAAY,CACVC,QAASC,KAAK,MAEhBnH,KAAM,CACJrC,QAASwJ,KAAK,SAiBLE,OAXf,YAAqC,IAAbjN,EAAY,EAAZA,SACd1B,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAA1CH,SACR,OACE,mCACE,cAAC4O,GAAA,EAAD,CAAejP,MAAOK,EAAW0O,GAAY/O,GAA7C,SACG+B,OCtCM,SAASmN,GAAT,GAAgC,IAAbnN,EAAY,EAAZA,SAChC,OACE,cAAC,IAAD,CAAUyL,MAAOA,GAAjB,SACE,cAAC,KAAD,UACE,cAAC,GAAD,UACGzL,QCJXoN,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,GAAD,UACE,cAAC,GAAD,QAGJI,SAASC,eAAe,SAM1BzE,O","file":"static/js/main.f082c4bb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport logo from './logo.svg';\r\nimport './loader.scss';\r\n\r\nfunction Loader({ open }) {\r\n  return (\r\n    <Backdrop open={open}>\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n    </Backdrop>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","export const UI_ACTION = '[UI] SetLoader';\r\nexport const UI_ACTIONS = {\r\n  SET_LOADER: '[UI] Set Loader',\r\n  TOGGLE_DARK_MODE: '[UI] Toggle Dark Mode',\r\n};\r\nexport const setLoader = (loading) => ({\r\n\r\n  type: UI_ACTIONS.SET_LOADER,\r\n  payload: {\r\n    loading,\r\n  },\r\n});\r\n\r\nexport const toggleDarkMode = () => ({\r\n  type: UI_ACTIONS.TOGGLE_DARK_MODE,\r\n});\r\n","const CONSTANTS = {\r\n  CONTINENTS: ['Africa', 'America', 'Asia', 'Europa', 'Oceania'],\r\n  API_END_POINTS: {\r\n    ALL: {\r\n      URL: 'https://restcountries.eu/rest/v2/all',\r\n    },\r\n    GET_URL: (continent) => ({\r\n      URL: `https://restcountries.eu/rest/v2/region/${continent.toLowerCase()}`,\r\n    }),\r\n  },\r\n  ROUTES: {\r\n    LOGIN: '/',\r\n    SELECT_CONTINENTS: '/selectContinents',\r\n    COUNTRIES_LIST: '/countriesList',\r\n    TRIVIA: '/trivia',\r\n  },\r\n};\r\n\r\nexport default CONSTANTS;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CONSTANTS from 'Utils/Constants';\r\n\r\nconst NavMenu = () => {\r\n  const history = useHistory();\r\n  const [openMenu, setState] = useState(null);\r\n  const { ROUTES } = CONSTANTS;\r\n  const handleClose = () => {\r\n    setState(null);\r\n  };\r\n  return (\r\n    <>\r\n      <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={(e) => setState(e.currentTarget)}>\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={openMenu}\r\n        keepMounted\r\n        open={Boolean(openMenu)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={() => {\r\n          history.push(ROUTES.LOGIN);\r\n          handleClose();\r\n        }}\r\n        >\r\n          Cambiar Nombre\r\n        </MenuItem>\r\n        <MenuItem onClick={() => {\r\n          history.push(ROUTES.SELECT_CONTINENTS);\r\n          handleClose();\r\n        }}\r\n        >\r\n          Seleccionar Continentes\r\n        </MenuItem>\r\n        <MenuItem onClick={() => {\r\n          history.push(ROUTES.COUNTRIES_LIST);\r\n          handleClose();\r\n        }}\r\n        >\r\n          Lista de Paises\r\n        </MenuItem>\r\n        <MenuItem onClick={() => {\r\n          history.push(ROUTES.TRIVIA);\r\n          handleClose();\r\n        }}\r\n        >\r\n          Trivia\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\nexport default NavMenu;\r\n","import React from 'react';\r\nimport {\r\n  Box, AppBar, Typography, Toolbar,\r\n  Switch, FormControlLabel,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toggleDarkMode } from 'Store/UI/ui.actions';\r\nimport SaveIcon from '@material-ui/icons/NightsStay';\r\nimport NavMenu from '../navMenu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n}));\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Box p=\"0\">\r\n        <AppBar position=\"static\" m={0} p={0}>\r\n          <Toolbar m={0} p={0} className={classes.flexContainer}>\r\n            <NavMenu />\r\n            <Typography\r\n              fontWeight={770}\r\n              fontSize={30}\r\n              noWrap\r\n              component=\"div\"\r\n            >\r\n              Countries Trivia\r\n            </Typography>\r\n            <ToggleNigthMode />\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n\r\n    </>\r\n  );\r\n};\r\nfunction ToggleNigthMode() {\r\n  const { darkMode } = useSelector((state) => state.ui);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <FormControlLabel\r\n        control={(\r\n          <>\r\n            <SaveIcon />\r\n            <Switch checked={darkMode} onChange={(e) => dispatch(toggleDarkMode())} />\r\n          </>\r\n)}\r\n        labelPlacement=\"start\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","/* eslint-disable react/destructuring-assignment */\r\nimport Loader from 'Component/Elements/Loader/loader';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Header from './header';\r\n\r\nfunction Layout({ children }) {\r\n  const { loader } = useSelector((state) => state.ui);\r\n  return (\r\n    <>\r\n      <Header />\r\n      {loader ? <Loader open /> : children}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import Layout from './Layout';\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { Box, Button, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  buttonContainer: {\r\n    width: '100%',\r\n    heigh: '15vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n  },\r\n  button: {\r\n    width: '60%',\r\n  },\r\n});\r\n\r\nfunction ButtonStyled({ textValue, handler, width }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Box className={classes.buttonContainer}>\r\n        <Button onClick={(e) => handler(e)} className={classes.button} variant=\"contained\">\r\n          <Typography fontWeight=\"700\">{textValue}</Typography>\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ButtonStyled;\r\n","import ButtonStyled from './buttonStyled';\r\n\r\nexport default ButtonStyled;\r\n","import React from 'react';\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\nimport { useSelector } from 'react-redux';\r\nimport ButtonStyled from 'Component/Elements/Button';\r\nimport { useHistory } from 'react-router';\r\nimport CONSTANTS from 'Utils/Constants';\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'ID', width: 70 },\r\n  {\r\n    field: 'flag',\r\n    headerName: 'Bandera',\r\n    width: 120,\r\n    renderCell: ({ value }) => (<img src={value} width=\"60px\" alt=\"flag\" />),\r\n  },\r\n  { field: 'nombre', headerName: 'Pais', width: 150 },\r\n  { field: 'capital', headerName: 'Capital', width: 150 },\r\n  { field: 'region', headerName: 'Continentes', width: 130 },\r\n];\r\n\r\nfunction CountriesList() {\r\n  const { countriesList } = useSelector((state) => state.countries);\r\n  const rowsC = countriesList.map((item, index) => ({\r\n    id: index,\r\n    nombre: item.translations.es,\r\n    flag2: <img src={item.flag} alt={`${item.name} flag`} />,\r\n    ...item,\r\n  }));\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <div style={{ height: '80vh', width: '100%' }}>\r\n        <DataGrid\r\n          rows={rowsC}\r\n          columns={columns}\r\n          pageSize={15}\r\n          checkboxSelection\r\n          components={{ Toolbar: GridToolbar }}\r\n        />\r\n        <ButtonStyled textValue=\"Generar Trivia\" handler={() => history.push(CONSTANTS.ROUTES.TRIVIA)} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CountriesList;\r\n","export const USER_ACTIONS = {\r\n  CHANGE: '[USER] Change name',\r\n  SUBMIT: '[USER] Submit name',\r\n};\r\n\r\nexport const userNameChange = (name) => ({\r\n  type: USER_ACTIONS.CHANGE,\r\n  payload: {\r\n    name,\r\n  },\r\n});\r\n\r\nexport const userNameSubmit = (history) => ({\r\n  type: USER_ACTIONS.SUBMIT,\r\n  payload: {\r\n    history,\r\n  },\r\n});\r\n","import { TextField } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nfunction InputFieldStyled({ handler, value, label }) {\r\n  return (\r\n    <>\r\n\r\n      <TextField\r\n        variant=\"filled\"\r\n        label={label}\r\n        id=\"input-with-icon-adornment\"\r\n        onChange={(e) => handler(e)}\r\n        value={value}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InputFieldStyled;\r\n","import React from 'react';\r\nimport { makeStyles, withTheme } from '@material-ui/core/styles';\r\nimport { Paper, Typography } from '@material-ui/core';\r\nimport InputFieldStyled from 'Component/Elements/Input/InputFieldStyled';\r\nimport ButtonStyled from 'Component/Elements/Button';\r\n\r\nconst useStyle = makeStyles({\r\n  flexContainer: {\r\n    margin: '7.5vh auto',\r\n    padding: '15vw`',\r\n    width: 'clamp(300px, 30vw, 500px)',\r\n    height: 'clamp(400px, 60vh, 700px)',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    gap: '6vh',\r\n  },\r\n});\r\nfunction InputSubmit({\r\n  title, value, onChangeHandler, onClickHandler, theme,\r\n}) {\r\n  const classes = useStyle();\r\n  return (\r\n    <>\r\n      <Paper\r\n        variant=\"elevation\"\r\n        elevation={5}\r\n        className={classes.flexContainer}\r\n        style={{\r\n          backgroundColor: theme.palette.primary.due,\r\n        }}\r\n      >\r\n        {title && <Typography variant=\"h5\" fontWeight=\"790\">{ title}</Typography>}\r\n        <InputFieldStyled handler={onChangeHandler} label=\"Nombre de Usuario\" />\r\n        <ButtonStyled textValue=\"Aceptar\" handler={onClickHandler} />\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withTheme(InputSubmit);\r\n","/* eslint-disable no-unused-expressions */\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userNameChange, userNameSubmit } from 'Store/User/user.actions';\r\nimport { useHistory } from 'react-router';\r\nimport InputSubmit from 'Component/Module/Layout/InputSummit/inputSubmit';\r\n\r\nfunction LandingPage() {\r\n  const dispatch = useDispatch();\r\n  const { name } = useSelector((state) => state.user);\r\n  const history = useHistory();\r\n  const clickHandler = (e) => {\r\n    dispatch(userNameSubmit(history));\r\n  };\r\n  const onChangeHandler = (e) => {\r\n    dispatch(userNameChange(e.target.value));\r\n  };\r\n  return (\r\n    <>\r\n      <InputSubmit title=\"Ingresar\" value={name} onChangeHandler={onChangeHandler} onClickHandler={clickHandler} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import LandingPage from './landingPage';\r\n\r\nexport default LandingPage;\r\n","export const API_REQUEST = 'API_REQUEST';\r\nexport const API_SUCCESS = 'API_SUCCESS';\r\nexport const API_ERROR = 'API_ERROR';\r\nexport const API_ACTIONS = {\r\n  REQUEST: 'API_REQUEST',\r\n  SUCCESS: 'API_SUCCESS',\r\n  ERROR: 'API_ERROR',\r\n};\r\n\r\nexport const apiRequest = (urls, method, body, entity, history) => ({\r\n  type: `[${entity.toUpperCase()}] ${API_REQUEST}`,\r\n  payload: {\r\n    meta: {\r\n      urls, method, entity, history,\r\n    },\r\n    data: body,\r\n  },\r\n});\r\nexport const apiSuccess = (response, entity) => ({\r\n  type: `[${entity.toUpperCase()}] ${API_SUCCESS}`,\r\n  payload: {\r\n    data: response,\r\n    meta: { entity },\r\n  },\r\n});\r\nexport const apiError = (error, entity) => ({\r\n  type: `[${entity.toUpperCase()}] ${API_ERROR}`,\r\n  payload: {\r\n    meta: { entity },\r\n    data: error,\r\n  },\r\n});\r\n","import { apiRequest } from 'Store/API/api.actions';\r\nimport CONSTANTS from 'Utils/Constants';\r\n\r\nexport default function continentSelectionHandler(dispatch, continentsList, history) {\r\n  let requestList = [];\r\n  let continentsTraslated;\r\n  if (continentsList.length === CONSTANTS.CONTINENTS) {\r\n    requestList = ['all'];\r\n  } else {\r\n    continentsTraslated = continentsList.map((item) => {\r\n      let res;\r\n      switch (item.toLowerCase()) {\r\n        case 'africa':\r\n          res = 'africa';\r\n          break;\r\n        case 'america':\r\n          res = 'americas';\r\n          break;\r\n        case 'asia':\r\n          res = 'asia';\r\n          break;\r\n        case 'europa':\r\n          res = 'europe';\r\n          break;\r\n        case 'oceania':\r\n          res = 'oceania';\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return res;\r\n    });\r\n  }\r\n  requestList = requestListCreator(continentsTraslated);\r\n  if (requestList.length > 0) {\r\n    dispatch(apiRequest(requestList, 'get', {}, 'countries', history));\r\n  }\r\n}\r\n\r\nfunction requestListCreator(list) {\r\n  let requestList = [];\r\n  if (list.length === CONSTANTS.CONTINENTS.length) {\r\n    requestList = [CONSTANTS.API_END_POINTS.ALL.URL];\r\n  } else {\r\n    requestList = list.map((item) => CONSTANTS.API_END_POINTS.GET_URL(item).URL);\r\n  }\r\n  return requestList;\r\n}\r\n","export const COUNTRIES_ACTIONS = {\r\n  TOGGLE_CONTINENT_SELECTION: '[COUNTRIES] Toggle Continent Selection',\r\n  TOGGLE_ALL_CONTINENTS: '[COUNTRIES] Toggle All Continents',\r\n};\r\n\r\nexport const toggleContient = (continent) => ({\r\n  type: COUNTRIES_ACTIONS.TOGGLE_CONTINENT_SELECTION,\r\n  payload: {\r\n    continent,\r\n  },\r\n});\r\n\r\nexport const toggleAllContinents = (continentsList) => ({\r\n  type: COUNTRIES_ACTIONS.TOGGLE_ALL_CONTINENTS,\r\n  payload: {\r\n    continentsList,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Paper, Typography, FormControlLabel, Checkbox,\r\n} from '@material-ui/core';\r\nimport { makeStyles, withTheme } from '@material-ui/core/styles';\r\nimport CONSTANTS from 'Utils/Constants';\r\nimport { toggleAllContinents, toggleContient } from 'Store/Countries/countries.actions';\r\n\r\nfunction SelectContinentItem({ theme, value }) {\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n    },\r\n    item: {\r\n      width: 'clamp(120px, 25vw, 300px)',\r\n    },\r\n  });\r\n  const { continentsList } = useSelector((state) => state.continents);\r\n  const selected = (CONSTANTS.CONTINENTS.includes(value))\r\n    ? continentsList.includes(value) : (continentsList.length === CONSTANTS.CONTINENTS.length);\r\n  const dispatch = useDispatch();\r\n  const onChangeCheckHandler = (e) => {\r\n    if (CONSTANTS.CONTINENTS.includes(value)) {\r\n      dispatch(toggleContient(value));\r\n    } else if (value.toLowerCase() === 'todos') {\r\n      dispatch(toggleAllContinents(continentsList));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <FormControlLabel\r\n        className={useStyles().root}\r\n        control={(\r\n          <Paper\r\n            className={useStyles().item}\r\n            variant=\"elevation\"\r\n            elevation={3}\r\n            style={{\r\n              backgroundColor: theme.palette.primary.main,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n            }}\r\n          >\r\n            <Typography\r\n              align=\"center\"\r\n              noWrap\r\n              component=\"div\"\r\n              style={{ color: theme.palette.text.primary }}\r\n            >\r\n              {value}\r\n            </Typography>\r\n            <Checkbox checked={selected} onChange={(e) => onChangeCheckHandler(e)} />\r\n          </Paper>\r\n)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withTheme(SelectContinentItem);\r\n","/* eslint-disable import/no-named-as-default */\r\n/* eslint-disable import/no-unresolved */\r\nimport React, { useEffect } from 'react';\r\nimport CONSTANTS from 'Utils/Constants';\r\nimport SelectContinentItem from './selectContinent.item';\r\n\r\nfunction SelectContinentContainer() {\r\n  const continents = CONSTANTS.CONTINENTS;\r\n  useEffect(() => () => { }, []);\r\n  return (\r\n    <>\r\n      <div style={{\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr 1fr 1fr',\r\n        margin: '0 auto',\r\n        gap: '3.5vw',\r\n      }}\r\n      >\r\n        {continents.concat(['Todos']).map((item) => (\r\n          <SelectContinentItem key={item} value={item} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SelectContinentContainer;\r\n","import { Button, Box, Typography } from '@material-ui/core';\r\nimport {\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport continentSelectionHandler from '../../../Utils/ContinentsSelectionhandler';\r\nimport SelectContinentContainer from './selectContinent.container';\r\n\r\nconst useStyles = makeStyles({\r\n  buttonContainer: {\r\n    width: '100%',\r\n    heigth: ' 15vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n\r\n  },\r\n  flexContainer: {\r\n    width: '100vw',\r\n    margin: '10vh 0 10vh 5px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    gap: '5vw',\r\n\r\n  },\r\n});\r\nfunction SelectContinent() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { name } = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const { continentsList } = useSelector((state) => state.continents);\r\n  const disable = continentsList.length === 0;\r\n  const username = name || name !== '' ? name : 'Anonimo';\r\n  const message = `Hola ${username}, selecciona los continentes para crear tu lista de Paises`;\r\n  return (\r\n    <>\r\n      <Box className={classes.flexContainer}>\r\n        <Typography variant=\"h5\" align=\"center\">{message}</Typography>\r\n        <SelectContinentContainer />\r\n        <Box className={classes.buttonContainer}>\r\n          <Button\r\n            onClick={(e) => {\r\n              continentSelectionHandler(dispatch, continentsList, history);\r\n            }}\r\n            disabled={disable}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            testid=\"SelectContinent\"\r\n          >\r\n            <Typography>Seleccionar</Typography>\r\n          </Button>\r\n        </Box>\r\n\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SelectContinent;\r\n","export default function randomIndex(arrayLength, controlArray) {\r\n  const res = Math.floor(Math.random() * (arrayLength));\r\n  if (controlArray.includes(res)) {\r\n    return randomIndex(arrayLength, controlArray);\r\n  }\r\n  return res;\r\n}\r\n","import randomIndex from 'Utils/randomIndex';\r\n\r\nexport const TRIVIA_ACTIONS = {\r\n  GENERATES_TRIVIA: '[TRIVIA] Generates Random Question',\r\n  VERIFY_ANSWER: '[TRIVIA] Verify Answer',\r\n  REVEAL_ANSWER: '[TRIVIA] Reveals answer',\r\n  CORRECT: '[TRIVIA] correct Answer',\r\n  INCORRECT: '[TRIVIA] incorrect Answer',\r\n  ANSWER_CHANGE: '[TRIVIA] onChange answer',\r\n};\r\n\r\nexport function generatesTrivia(controlArray, countriesList) {\r\n  const index = randomIndex(countriesList.length, controlArray);\r\n  const selectedCountry = countriesList[index];\r\n  return ({\r\n    type: TRIVIA_ACTIONS.GENERATES_TRIVIA,\r\n    payload: {\r\n      index,\r\n      selectedCountry,\r\n    },\r\n  });\r\n}\r\nexport function onChangeAnswer(value) {\r\n  return ({\r\n    type: TRIVIA_ACTIONS.ANSWER_CHANGE,\r\n    payload: { value },\r\n  });\r\n}\r\nexport function verifyAnswer() {\r\n  return ({\r\n    type: TRIVIA_ACTIONS.VERIFY_ANSWER,\r\n    payload: {\r\n    },\r\n  });\r\n}\r\n\r\nexport function isAnswerCorrect() {\r\n  return ({\r\n    type: TRIVIA_ACTIONS.CORRECT,\r\n    payload: {\r\n\r\n    },\r\n  });\r\n}\r\nexport function revealAnswer() {\r\n  return ({\r\n    type: TRIVIA_ACTIONS.REVEAL_ANSWER,\r\n    payload: {\r\n\r\n    },\r\n  });\r\n}\r\nexport function isAnswerIncorrect() {\r\n  return ({\r\n    type: TRIVIA_ACTIONS.INCORRECT,\r\n    payload: {\r\n    },\r\n  });\r\n}\r\n","import {\r\n  Table, TableBody, TableCell, TableContainer, TableHead, TableRow,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst TriviaResultsTable = () => {\r\n  const { noCorrectAns, noAttemps, noRevealedAns } = useSelector((state) => state.trivia);\r\n  return (\r\n    <>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Correctas</TableCell>\r\n              <TableCell>Intentos</TableCell>\r\n              <TableCell>Reveladas</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableCell>{noCorrectAns}</TableCell>\r\n            <TableCell>{noAttemps}</TableCell>\r\n            <TableCell>{noRevealedAns}</TableCell>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TriviaResultsTable;\r\n","import React, { useEffect } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  generatesTrivia, verifyAnswer, onChangeAnswer, revealAnswer,\r\n} from 'Store/Trivia/trivia.actions';\r\nimport CONSTANTS from 'Utils/Constants';\r\nimport { useHistory } from 'react-router';\r\nimport ButtonStyled from 'Component/Elements/Button';\r\nimport InputFieldStyled from 'Component/Elements/Input/InputFieldStyled';\r\nimport TriviaResultsTable from './trivia.table';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    margin: '10vh 15vw',\r\n    display: 'flex',\r\n    aligItems: 'center',\r\n    justtifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  innerContainer: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    gap: '2vh',\r\n  },\r\n});\r\n\r\nfunction TriviaPage() {\r\n  const clasess = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { trivia, countries } = useSelector((state) => state);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (countries.countriesList.length < 1) {\r\n      history.push(CONSTANTS.ROUTES.SELECT_CONTINENTS);\r\n      // eslint-disable-next-line no-alert\r\n      alert('Invalid Countries List');\r\n    } else {\r\n      dispatch(generatesTrivia(trivia.controlArray, countries.countriesList));\r\n    }\r\n    return () => {\r\n    };\r\n  }, [countries.countriesList, dispatch, history, trivia.controlArray]);\r\n  function onChangeHandler(e) {\r\n    dispatch(onChangeAnswer(e.target.value));\r\n  }\r\n  function answerHandler() {\r\n    dispatch(verifyAnswer());\r\n  }\r\n  return (\r\n    <>\r\n      <div className={clasess.container}>\r\n\r\n        <div className={clasess.innerContainer}>\r\n          {trivia.reveal && <Typography variant=\"h4\">{trivia.correctAnswer}</Typography> }\r\n          <img src={trivia.selectedCountry.flag} alt=\"trivia tag\" width=\"300\" />\r\n          <InputFieldStyled value={trivia.userAnswer} label=\"Introducir Respuesta\" handler={(e) => onChangeHandler(e)} />\r\n          <ButtonStyled textValue=\"Responder\" handler={(e) => { answerHandler(); }} />\r\n          <ButtonStyled textValue=\"Revelar\" handler={(e) => { dispatch(revealAnswer()); }} />\r\n\r\n        </div>\r\n        <div>\r\n          <TriviaResultsTable />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TriviaPage;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router';\r\nimport Layout from 'Component/Module/Layout';\r\nimport CountriesList from 'Component/Prototypes/CountriesList/CountriesList';\r\nimport LandingPage from 'Component/Prototypes/LandingPage';\r\nimport SelectContinent from 'Component/Prototypes/SelectContinents/SelectContinent';\r\nimport TriviaPage from 'Component/Prototypes/TriviaPage/TriviaPage';\r\nimport CONSTANTS from 'Utils/Constants';\r\n\r\nfunction RoutesComponent() {\r\n  const { ROUTES } = CONSTANTS;\r\n  return (\r\n    <Switch>\r\n\r\n      <Layout>\r\n        <Route exact path={ROUTES.LOGIN} component={LandingPage} />\r\n        <Route exact path={ROUTES.COUNTRIES_LIST} component={CountriesList} />\r\n        <Route exact path={ROUTES.SELECT_CONTINENTS} component={SelectContinent} />\r\n        <Route exact path={ROUTES.TRIVIA} component={TriviaPage} />\r\n      </Layout>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesComponent;\r\n","import { CssBaseline } from '@material-ui/core';\r\nimport React from 'react';\r\nimport RoutesComponent from 'Routes';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <CssBaseline />\r\n      <RoutesComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { apiError, apiSuccess } from 'Store/API/api.actions';\r\nimport { setLoader } from 'Store/UI/ui.actions';\r\n\r\nconst apiMiddleware = ({ dispatch }) => (next) => async (action) => {\r\n  next(action);\r\n\r\n  if (action.type.match(/API_REQUEST/)) {\r\n    const {\r\n      entity, method, urls, history,\r\n    } = action.payload.meta;\r\n    let allData;\r\n    try {\r\n      dispatch(setLoader(true));\r\n      const resF = await Promise.all(urls.map((url) => fetch(url, { method })));\r\n      const dataF = await Promise.all(resF.map((res) => res.json()));\r\n      allData = [].concat(...dataF);\r\n      dispatch(apiSuccess(allData, entity));\r\n      history.push('/countriesList');\r\n    } catch (error) {\r\n      dispatch(apiError(error, entity));\r\n    }\r\n  }\r\n  if (action.type.match(/API_ERROR/) || action.type.match(/API_SUCCESS/)) {\r\n    dispatch(setLoader(false));\r\n  }\r\n};\r\n\r\nexport default apiMiddleware;\r\n","import {\r\n  generatesTrivia, isAnswerCorrect, isAnswerIncorrect, TRIVIA_ACTIONS,\r\n} from 'Store/Trivia/trivia.actions';\r\n\r\nconst triviaMiddleware = ({ dispatch, getState }) => (next) => async (action) => {\r\n  next(action);\r\n  const { trivia, countries } = getState();\r\n  const { type } = action;\r\n  if (/trivia/i.test(type)) {\r\n    switch (type) {\r\n      case TRIVIA_ACTIONS.VERIFY_ANSWER:\r\n        if (RegExp(trivia.correctAnswer, 'i').test(trivia.userAnswer)) {\r\n          dispatch(isAnswerCorrect());\r\n          dispatch(generatesTrivia(trivia.controlArray, countries.countriesList));\r\n        } else {\r\n          dispatch(isAnswerIncorrect());\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n};\r\n\r\nexport default triviaMiddleware;\r\n","import produce from 'immer';\r\nimport toggleSelectionArray from 'Utils';\r\nimport CONSTANTS from 'Utils/Constants';\r\nimport { COUNTRIES_ACTIONS } from './countries.actions';\r\n\r\nexport const CONTINENTS_INITAL_STATE = {\r\n  continentsList: [],\r\n};\r\n\r\nconst continentsReducer = produce((draft, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case COUNTRIES_ACTIONS.TOGGLE_CONTINENT_SELECTION:\r\n      draft.continentsList = toggleSelectionArray(draft.continentsList, payload.continent);\r\n      break;\r\n    case COUNTRIES_ACTIONS.TOGGLE_ALL_CONTINENTS:\r\n      if (\r\n        payload.continentsList === CONSTANTS.CONTINENTS\r\n      ) {\r\n        draft.continentsList = [];\r\n      } else {\r\n        draft.continentsList = CONSTANTS.CONTINENTS;\r\n      } break;\r\n    default:\r\n      break;\r\n  }\r\n}, CONTINENTS_INITAL_STATE);\r\n\r\nexport default continentsReducer;\r\n","export default function toggleSelectionArray(array, value) {\r\n  const index = array.indexOf(value);\r\n  const newArray = array;\r\n  if (index < 0) {\r\n    newArray.push(value);\r\n  } else {\r\n    newArray.splice(index, 1);\r\n  }\r\n  newArray.sort();\r\n  return newArray;\r\n}\r\n","import produce from 'immer';\r\nimport { UI_ACTIONS } from './ui.actions';\r\n\r\nexport const LOADER_INITAL_STATE = { loader: false, darkMode: false };\r\n\r\nconst uiReducer = produce((draft, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case UI_ACTIONS.SET_LOADER:\r\n      draft.loader = payload.loading;\r\n      break;\r\n    case UI_ACTIONS.TOGGLE_DARK_MODE:\r\n      draft.darkMode = !draft.darkMode;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}, LOADER_INITAL_STATE);\r\n\r\nexport default uiReducer;\r\n","import produce from 'immer';\r\nimport CONSTANTS from 'Utils/Constants';\r\n\r\nimport { USER_ACTIONS } from './user.actions';\r\n\r\nconst USER_INITIAL_STATE = {\r\n  name: '',\r\n};\r\nconst userReducer = produce((draft, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_ACTIONS.CHANGE:\r\n      draft.name = payload.name;\r\n      break;\r\n    case USER_ACTIONS.SUBMIT:\r\n      payload.history.push(CONSTANTS.ROUTES.SELECT_CONTINENTS);\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n}, USER_INITIAL_STATE);\r\n\r\nexport default userReducer;\r\n","import produce from 'immer';\r\nimport { API_ACTIONS } from './api.actions';\r\n\r\nconst ENTITY = '[COUNTRIES]';\r\n\r\nconst COUNTRIES_LIST_INITIAL_STATE = {\r\n  countriesList: [],\r\n};\r\n\r\nconst countriesApiReducer = produce((draft, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case `${ENTITY} ${API_ACTIONS.REQUEST}`:\r\n      draft.countriesList = [];\r\n      break;\r\n    case `${ENTITY} ${API_ACTIONS.SUCCESS}`:\r\n      draft.countriesList = draft.countriesList.concat(payload.data);\r\n      break;\r\n    case `${ENTITY} ${API_ACTIONS.ERROR}`:\r\n      // eslint-disable-next-line no-alert\r\n      alert('Oops hubo un error en la conexion con el Servidor');\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}, COUNTRIES_LIST_INITIAL_STATE);\r\n\r\nexport default countriesApiReducer;\r\n","/* eslint-disable no-plusplus */\r\nimport produce from 'immer';\r\nimport { TRIVIA_ACTIONS } from './trivia.actions';\r\n\r\nconst TRIVIA_INITIAL_STATE = {\r\n  controlArray: [],\r\n  userAnswer: '',\r\n  selectedCountry: {},\r\n  correctAnswer: '',\r\n  noCorrectAns: 0,\r\n  noAttemps: 0,\r\n  noRevealedAns: 0,\r\n  reveal: false,\r\n};\r\n\r\nconst triviaReducer = produce((draft, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case TRIVIA_ACTIONS.GENERATES_TRIVIA:\r\n      // eslint-disable-next-line no-unused-expressions\r\n      draft.reveal = false;\r\n      draft.userAnswer = '';\r\n      draft.controlArray.push(payload.index);\r\n      draft.selectedCountry = payload.selectedCountry;\r\n      draft.correctAnswer = payload.selectedCountry.translations.es;\r\n      break;\r\n    case TRIVIA_ACTIONS.REVEAL_ANSWER:\r\n      if (draft.reveal !== true) {\r\n        draft.reveal = !draft.reveal;\r\n        draft.noRevealedAns++;\r\n      }\r\n      break;\r\n    case TRIVIA_ACTIONS.ANSWER_CHANGE:\r\n      draft.userAnswer = payload.value;\r\n      break;\r\n    case TRIVIA_ACTIONS.CORRECT:\r\n      draft.noCorrectAns++;\r\n      draft.noAttemps++;\r\n      break;\r\n    case TRIVIA_ACTIONS.INCORRECT:\r\n      draft.noAttemps++;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}, TRIVIA_INITIAL_STATE);\r\n\r\nexport default triviaReducer;\r\n","import { combineReducers } from '@reduxjs/toolkit';\r\nimport continentsReducer from './Countries/countries.reducer';\r\nimport uiReducer from './UI/ui.reducer';\r\nimport userReducer from './User/user.reducer';\r\nimport countriesApiReducer from './API/api.reducer';\r\nimport triviaReducer from './Trivia/trivia.reducers';\r\n\r\nconst rootReducer = combineReducers(\r\n  {\r\n    ui: uiReducer,\r\n    user: userReducer,\r\n    continents: continentsReducer,\r\n    countries: countriesApiReducer,\r\n    trivia: triviaReducer,\r\n  },\r\n);\r\n\r\nexport default rootReducer;\r\n","/* eslint-disable no-console */\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport apiMiddleware from 'Store/Middlewares/api.middleware';\r\nimport triviaMiddleware from './Middlewares/trivia.middleware';\r\nimport rootReducer from './rootReducer';\r\n\r\nexport function saveToLocalStorage(state) {\r\n  localStorage.clear();\r\n  try {\r\n    const serialisedState = JSON.stringify(state);\r\n    localStorage.setItem('persistantState', serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n}\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serialisedState = localStorage.getItem('persistantState');\r\n    if (serialisedState === null) return undefined;\r\n    return JSON.parse(serialisedState);\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return undefined;\r\n  }\r\n}\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: [apiMiddleware, triviaMiddleware],\r\n  preloadedState: loadFromLocalStorage(),\r\n\r\n});\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\nexport default store;\r\n","import React from 'react';\r\nimport {\r\n  ThemeProvider, createMuiTheme,\r\n} from '@material-ui/core/styles';\r\nimport { orange, grey } from '@material-ui/core/colors';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: orange[400],\r\n      // contrastText: grey[900],\r\n    },\r\n    background: {\r\n      default: grey[200],\r\n    },\r\n    text: {\r\n      primary: '#000000',\r\n    },\r\n  },\r\n\r\n});\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: grey[800],\r\n      due: grey[600],\r\n      // contrastText: grey[100],\r\n    },\r\n    background: {\r\n      default: grey[900],\r\n    },\r\n    text: {\r\n      primary: grey[100],\r\n    },\r\n  },\r\n\r\n});\r\n\r\nfunction ThemeContext({ children }) {\r\n  const { darkMode } = useSelector((state) => state.ui);\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={darkMode ? darkTheme : theme}>\r\n        {children}\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ThemeContext;\r\n","import React from 'react';\r\nimport store from 'Store/store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport ThemeContext from './themeContext';\r\n\r\nexport default function Context({ children }) {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <ThemeContext>\r\n          {children}\r\n        </ThemeContext>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from 'App';\r\nimport reportWebVitals from 'reportWebVitals';\r\nimport Context from 'Context/context';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Context>\r\n      <App />\r\n    </Context>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\nif (module.hot) {\r\n  module.hot.accept('./App', () => {\r\n    // eslint-disable-next-line global-require\r\n    const NextApp = require('./App').default;\r\n    ReactDOM.render(<NextApp />, document.getElementById('root'));\r\n  });\r\n}\r\n"],"sourceRoot":""}